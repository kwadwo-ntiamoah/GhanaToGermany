@page "/"
@layout UnauthorizedLayout

@inject ICustomHttpClient customHttpClient
@inject NavigationManager navigationManager
@inject CookieAuthStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<div class="h-screen w-screen overflow-hidden">
    <div class="grid md:grid-cols-2">
        <div class="hidden md:block bg-blue-500 relative">
            <img src="/images/login_bg.jpg" class="object-cover object-center " alt="">
            <div class="absolute top-5 left-5 inset-0">
                <h2 class="font-bold text-2xl text-white">GhanaToGermany</h2>
            </div>
        </div>
        <div>
            <section class="bg-gray-50 dark:bg-gray-900">
                <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">
                    <a href="#" class="flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white">
                        <img class="w-8 h-8 mr-2" src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/logo.svg"
                            alt="logo">
                        GhanaToGermany
                    </a>
                    <div
                        class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
                        <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                            <h1
                                class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                                Sign in to your account
                            </h1>

                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="text-red-500 text-sm border-red-500 border bg-red-100 rounded-lg p-4 mb-4"
                                    role="alert">
                                    <span class="font-medium">Error!</span> @errorMessage
                                    @errorMessage
                                </div>
                            }

                            <EditForm Model="model" FormName="loginForm" OnValidSubmit="loginAsync" class="space-y-4 md:space-y-6" action="#">
                                <div>
                                    <label for="email"
                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your
                                        email</label>
                                    <input type="email" name="email" id="email" @bind-value="model.Email"
                                        class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                        placeholder="name@company.com" required="">
                                </div>
                                <div>
                                    <label for="password"
                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                                    <input type="password" name="password" id="password" placeholder="••••••••" @bind-value="model.Password"
                                        class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                        required="">
                                </div>
                                <div class="flex items-center justify-between">
                                    <div class="flex items-start">
                                        <div class="flex items-center h-5">
                                            <input id="remember" aria-describedby="remember" type="checkbox"
                                                class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                                                >
                                        </div>
                                        <div class="ml-3 text-sm">
                                            <label for="remember" class="text-gray-500 dark:text-gray-300">Remember
                                                me</label>
                                        </div>
                                    </div>
                                    <a href="#"
                                        class="text-sm font-medium text-primary-600 hover:underline dark:text-primary-500">Forgot
                                        password?</a>
                                </div>
                                <Button Type="ButtonType.Submit" Loading="isLoading"
                                    class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Sign
                                    in</Button>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>

@code {
    LoginModel model = new();
    string? errorMessage;
    bool isLoading = false;

    async Task loginAsync()
    {
        try {
            var payload = new LocalLoginDto {
                Email = model.Email,
                Password = model.Password
            };

            isLoading = true;
            var response = await customHttpClient.PostAsync<LocalLoginDto, ProfileResponse>("api/auth/local/login", payload);
            isLoading = false;

            if (response != null) {
                authStateProvider.Login(response);
                navigationManager.NavigateTo("/dashboard");
            } else {
                errorMessage = "Login failed. Please check your credentials.";
    
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        } finally {
            StateHasChanged();
        }
    }

    private class LoginModel {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}