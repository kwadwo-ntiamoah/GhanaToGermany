@page "/"
@using System.ComponentModel.DataAnnotations

<PageTitle>Home</PageTitle>

<div class="min-h-screen bg-gray-900 text-white p-6">
    <div class="mb-8">
        <h1 class="text-2xl font-semibold">Report</h1>
    </div>

    <Card Background="Background.Dark" Border="Border.Light" class="mb-6">
        <CardBody>
            <Row>
                <Column ColumnSize="ColumnSize.Is3.OnDesktop">
                    <Field>
                        <FieldLabel Class="text-gray-300">From <span class="text-red-500">*</span></FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="fromDate" Class="bg-gray-800 border-gray-700" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3.OnDesktop">
                    <Field>
                        <FieldLabel Class="text-gray-300">To <span class="text-red-500">*</span></FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="@toDate" Class="bg-gray-800 border-gray-700" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is2.OnDesktop">
                    <Field>
                        <FieldLabel Class="text-gray-300">Branch</FieldLabel>
                        <Select TValue="string" @bind-Value="@selectedBranch" Class="bg-gray-800 border-gray-700 p-3">
                            <SelectItem Value="@("all")">All Branch</SelectItem>
                            @foreach (var branch in branches)
                            {
                                <SelectItem Value="@branch">@branch</SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is2.OnDesktop">
                    <Field>
                        <FieldLabel Class="text-gray-300">Maker</FieldLabel>
                        <Select TValue="string" @bind-Value="@selectedMaker">
                            <SelectItem Value="@("all")">All Staff</SelectItem>
                            @foreach (var maker in makers)
                            {
                                <SelectItem Value="@maker">@maker</SelectItem>
                            }
                        </Select>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is2.OnDesktop">
                    <Button Color="Color.Warning" Clicked="@ApplyFilter" Class="mt-6">
                        Apply Filter
                    </Button>
                </Column>
            </Row>
        </CardBody>
    </Card>

    <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl">Filter Result</h2>
        <Button Color="Color.Warning" Outlined Clicked="@DownloadReport">
            Download Report
        </Button>
    </div>

    <DataGrid TItem="ReportItem" Data="@reportItems" Responsive Class="bg-gray-800">
        <DataGridColumn Field="@nameof(ReportItem.Date)" Caption="Date" />
        <DataGridColumn Field="@nameof(ReportItem.AccountNumber)" Caption="Cust. Account Number" />
        <DataGridColumn Field="@nameof(ReportItem.Maker)" Caption="Maker" />
        <DataGridColumn Field="@nameof(ReportItem.Branch)" Caption="Branch" />
        <DataGridColumn Field="@nameof(ReportItem.Approver)" Caption="CPC Approver" />
        <DataGridColumn Field="@nameof(ReportItem.FileId)" Caption="File ID" />
        <DataGridColumn Field="@nameof(ReportItem.FileName)" Caption="File">
            <DisplayTemplate>
                <a href="@context.FileName" class="text-blue-400 hover:underline">
                    @context.FileName
                </a>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Field="@nameof(ReportItem.Status)" Caption="Status">
            <DisplayTemplate>
                <Badge Color="@(context.Status == "Passed" ? Color.Success : Color.Danger)">
                    @context.Status
                </Badge>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Caption="Actions">
            <DisplayTemplate>
                <Button Color="Color.Secondary" Size="Size.Small" Clicked="@(() => ViewDetails(context))">
                    View
                </Button>
            </DisplayTemplate>
        </DataGridColumn>
    </DataGrid>
</div>

@code {
    private DateTime fromDate = DateTime.Now;
    private DateTime toDate = DateTime.Now;
    private string selectedBranch = "all";
    private string selectedMaker = "all";
    private List<string> branches = new() { "Kwame Nkrumah Circle" };
    private List<string> makers = new() { "Emmanuel Kojo Thompson" };
    private List<ReportItem> reportItems = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadReportData();
    }

    private async Task LoadReportData()
    {
        // Simulated data - replace with actual API call
        reportItems = new List<ReportItem>
{
new ReportItem
{
Date = DateTime.Now,
AccountNumber = "12345678987654",
Maker = "Emmanuel Kojo Thompson",
Branch = "Kwame Nkrumah Circle",
Approver = "Charitable Odoi",
FileId = "00123445",
FileName = "August_payment.csv",
Status = "Passed"
}
// Add more items as needed
};
    }

    private async Task ApplyFilter()
    {
        // Implement filter logic
        await LoadReportData();
    }

    private async Task DownloadReport()
    {
        // Implement download logic
    }

    private void ViewDetails(ReportItem item)
    {
        // Implement view details logic
    }

    public class ReportItem
    {
        public DateTime Date { get; set; }
        public string AccountNumber { get; set; } = "";
        public string Maker { get; set; } = "";
        public string Branch { get; set; } = "";
        public string Approver { get; set; } = "";
        public string FileId { get; set; } = "";
        public string FileName { get; set; } = "";
        public string Status { get; set; } = "";
    }

}
